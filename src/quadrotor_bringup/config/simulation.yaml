PybulletPhysicsSimulation:
  physics_server: DIRECT  # Physics server to use (GUI or DIRECT)
  quadrotor_description: neuroBEM  # Name of the quadrotor model to use (cf2x or other)
  # obstacles_description: [NONE]

  obstacles_description: [hoop, hoop, hoop, hoop]  # List of obstacles to include in the simulation, if none then [NONE]
  obstacles_poses: [4.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0,
                    8.0, 4.0, 1.0, 0.0, 0.0, -0.7, 0.7,
                    8.0, 4.0, 3.0, 0.0, 0.0, -0.7, 0.7,
                    4.0, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0,]  # List of poses, if None then [0.0]
  render_ground: false  # Whether to render the ground plane
  simulation_step_frequency: 240  # Frequency at which the simulation is stepped
  state_topic: quadrotor_state  # Topic name for the quadrotor state messages
  rotor_speeds_topic: quadrotor_rotor_speeds  # Topic name for the quadrotor rotor speeds messages
  use_rotor_dynamics: True
  calculate_linear_drag: True
  calculate_quadratic_drag: True
  use_wind_speed: True
  manual_tau_xy_calculation: False
  calculate_residuals: False

PybulletCameraSimulation:
  physics_server: GUI  # Physics server to use (GUI or DIRECT)
  quadrotor_description: neuroBEM  # Name of the quadrotor model to use (cf2x or other)
  obstacles_description: [hoop,hoop, hoop, hoop, hoop, hoop]  # List of obstacles to include in the simulation, if none then [NONE]
  obstacles_poses: [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0,
                    10.0, 5.0, 1.0, 0.0, 0.0, -0.7, 0.7,
                    5.0, 5.0, 1.0, 0.0, 0.0, -0.7, 0.7,
                    5.0, -5.0, 1.0, 0.0, 0.0, -0.7, 0.7,
                    10.0, -5.0, 1.0, 0.0, 0.0, -0.7, 0.7,
                    5.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0,]  # List of poses, if None then [0.0]
  render_ground: true  # Whether to render the ground plane
  render_architecture: true  # Whether to render the architecture
  # Dimensions of the published images
  image_width: 640
  image_height: 480
  image_publishing_frequency: 60  # Frequency at which images are published
  state_topic: quadrotor_state  # Topic name for the quadrotor state messages
  image_topic: quadrotor_img  # Topic name for the quadrotor image messages
  threading: false

PIDController:
  KP_Z: 40.0  # For thrust
  KD_Z: 12.0  # For thrust
  KI_Z: 1.0  # For thrust
  KP_XY: 12.0  # For position
  KD_XY: 12.0  # For position
  KI_XY: 0.25  # For position
  KP_RP: 0.009  # For roll and pitch
  KD_RP: 0.001  # For roll and pitch
  KI_RP: 0.0  # For roll and pitch
  KP_Y: 0.001  # For yaw
  KD_Y: 0.001  # For yaw
  KI_Y: 0.0  # For yaw
  MAX_ROLL_PITCH: 0.785 # For roll and pitch (~ pi/4)
  quadrotor_description: cf2x  # quadrotor name (for config file)
  state_topic: quadrotor_state
  reference_topic: quadrotor_reference
  rotor_speeds_topic: quadrotor_rotor_speeds
  command_publishing_frequency: 240

DFBCController:
  KP_XYZ: [10.0, 10.0, 10.0]  # For position
  KD_XYZ: [6.0, 6.0, 6.0]  # For position
  KP_RPY: [150, 150, 10.0]  # For roll, pitch and yaw
  KD_RPY: [20, 20, 8.0]  # For roll, pitch and yaw
  Weights: [0.001, 10, 10, 0.1]
  quadrotor_description: neuroBEM  # quadrotor name (for config file)
  state_topic: quadrotor_state
  reference_topic: quadrotor_reference
  rotor_speeds_topic: quadrotor_rotor_speeds
  command_publishing_frequency: 240

PolyTrajOptimizer:
  time_allocation: distance_proportional  # distance_proportional, constant or optimization
  segment_time: 0.1  # segment time in seconds for constant time allocation
  avg_velocity: 6.0  # average velocity in m/s for distance proportional time allocation
  quadrotor_description: neuroBEM  # quadrotor description file name (without extension)
  one_segment: false  # if true, the trajectory will be a single segment
  high_order_constraints: 2  # number of constraints for the high order derivatives (velocity = 1 and so on)
  optimize: true
  added_poly_order: 1
  waypoints_topic: quadrotor_waypoints
  trajectory_topic: quadrotor_polynomial_trajectory
  map_topic: quadrotor_map

QuadrotorPathVisualizer:
  refresh_rate: 10
